akka {

  log-dead-letters = off

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
    debug {
      receive = off
      lifecycle = off
    }

    deployment {
      /privacy {
        router = round-robin-group
        nr-of-instances = 100
        routees.paths = ["/user/privacy"]
        cluster {
          enabled = on
          allow-local-routees = off
          use-role = privacy
        }
      }
    }

    deployment {
      /tokenizer {
        router = round-robin-group
        nr-of-instances = 100
        routees.paths = ["/user/tokenizer"]
        cluster {
          enabled = on
          allow-local-routees = off
          use-role = tokenizer
        }
      }
    }
  }
  remote {
    netty.tcp {
      hostname = ${clustering.ip}
      port = ${clustering.port}
    }
    //log-remote-lifecycle-events = on
  }
  cluster {
    log-info = on

    seed-nodes = [
       "akka.tcp://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]
    auto-down-unreachable-after = 10s
  }

  //persistence.journal.plugin = "kafka-journal"

  kafka-journal{
    producer {
      zookeeper {
        connect = ${clustering.kafka-ip}":"${clustering.kafka-port}
      }
    }
  }
}

clustering {
 ip = "127.0.0.1"
 ip = ${?CLUSTER_IP}
 port = 1600
 port = ${?CLUSTER_PORT}
 seed-ip = "127.0.0.1"
 seed-ip = ${?CLUSTER_IP}
 seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
 seed-port = 1600
 seed-port = ${?SEED_PORT_1600_TCP_PORT}
 cluster.name = clustering-cluster

 kafka-ip = "127.0.0.1"
 kafka-ip = ${?KAFKA_IP}
 kafka-port = 2181
 kafka-port = ${?KAFKA_PORT}
}